name: E2e Tests
on:
  push:
    branches:
      - main
      - feat/init-sdk
  workflow_dispatch:
  workflow_call:

concurrency:
  group: build-e2e-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-ios:
    runs-on: macos-15-xlarge
    timeout-minutes: 45
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/setup

      - name: Build package
        run: yarn prepare

      - name: Restore CocoaPods cache
        id: cocoapods-cache
        uses: actions/cache/restore@v4
        with:
          path: |
            example/ios/Pods
            example/ios/Podfile.lock
          key: ${{ runner.os }}-pods-${{ hashFiles('example/ios/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-${{ hashFiles('example/ios/Podfile.lock') }}
            ${{ runner.os }}-pods-

      - name: Install CocoaPods dependencies
        run: |
          cd example/ios
          pod install
          cd ../..

      - name: Inject environment variables
        run: |
          rm -f example/.env
          echo "EXPO_PUBLIC_BKT_API_ENDPOINT=${{ secrets.E2E_API_ENDPOINT }}" >> example/.env
          echo "EXPO_PUBLIC_BKT_API_KEY=${{ secrets.E2E_API_KEY }}" >> example/.env
          echo "CI=true" >> example/.env
      - name: Build example app for iOS
        run: |
          yarn build:e2e:ios

      - name: Cache cocoapods dependencies
        if: steps.cocoapods-cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: |
            example/ios/Pods
            example/ios/Podfile.lock
          key: ${{ steps.cocoapods-cache.outputs.cache-primary-key }}

      - name: Run iOS E2E tests
        uses: dniHze/maestro-test-action@v1
        with:
          flow: e2e
          report: report.xml

      - name: Upload iOS E2E test results (report.xml)
        uses: actions/upload-artifact@v4
        with:
          name: e2e-ios-results
          path: report.xml

  build-android:
    runs-on: macos-15-xlarge
    timeout-minutes: 45
    strategy:
      matrix:
        api-level:
          - 34
        target:
          - default  # Faster than google_apis
        arch:
          - x86_64
        cores:
          - 8
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/setup

      - name: Build package
        run: yarn prepare

      - name: AVD cache
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}-${{ matrix.target }}-${{ matrix.arch }}
          restore-keys: |
            avd-${{ matrix.api-level }}-${{ matrix.target }}-
            avd-${{ matrix.api-level }}-
      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@1dcd0090116d15e7c562f8db72807de5e036a4ed # v2.34.0
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: ${{ matrix.arch }}
          cores: ${{ matrix.cores }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -memory 2048 -no-snapshot-load
          disable-animations: true
          script: echo "Generated AVD snapshot for caching"

      - name: Inject environment variables
        run: |
          rm -f example/.env
          echo "EXPO_PUBLIC_BKT_API_ENDPOINT=${{ secrets.E2E_API_ENDPOINT }}" >> example/.env
          echo "EXPO_PUBLIC_BKT_API_KEY=${{ secrets.E2E_API_KEY }}" >> example/.env
          echo "CI=true" >> example/.env

      - name: Setup Maestro
        uses: dniHze/maestro-test-action@v1
      - name: Run Android integration tests
        env:
          # Optimized Gradle options for CI
          GRADLE_OPTS: -Dorg.gradle.daemon=true -Dorg.gradle.parallel=true -Dorg.gradle.caching=true -Dorg.gradle.jvmargs="-Xmx2g -XX:MaxMetaspaceSize=1g -XX:+HeapDumpOnOutOfMemoryError"
        uses: reactivecircus/android-emulator-runner@1dcd0090116d15e7c562f8db72807de5e036a4ed # v2.34.0
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: ${{ matrix.arch }}
          cores: ${{ matrix.cores }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -memory 2048
          disable-animations: true
          # Run tests with sharding
          script: yarn build:e2e:android && maestro test e2e --format=junit --output=report.xml --no-ansi
